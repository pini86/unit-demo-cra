name: deploy
on: workflow_dispatch
jobs:
    get_tag:
      runs-on: ubuntu-latest
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      steps:
        - uses: actions/checkout@v3
          with:
              fetch-depth: 0
        - name: get last tag
          id: last
          run: |
            echo "TAG=$(git describe --tags --match v[0-9]* $(git rev-list --tags --max-count=1))" >> $GITHUB_OUTPUT

        - name: checking tag
          id: ok
          run: echo ${{ steps.last.outputs.TAG }}
    perform-tests:
        needs: get_tag
        uses: ./.github/workflows/tests.yml
        with: 
          update_issue: true
          tagname: ${{ needs.get_tag.outputs.tag }}

    deploy:
      needs: perform-tests
      runs-on: ubuntu-latest
      steps:
        - uses: actions/setup-node@v3
          with:
            node-version: "18"
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
          if: ${{ github.ref == 'refs/heads/master' }}
        - run: |
            npm ci
            git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
            npm run deploy -- -u "github-actions-bot <support+actions@github.com>"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          if: success()
        - name: close issue
          env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            TAG=$(git describe --tags --abbrev=0)
            ISSUE_TITLE="RELEASE ${TAG}"
            ISSUE_ID=$(gh issue list --json number,title -q \
              ".[] | select(.title == \"${ISSUE_TITLE}\") | .number")
            if [ ! -z "$ISSUE_ID" ]; then
              gh issue close $ISSUE_ID -c "[Release successfully deployed](https://pini86.github.io/unit-demo-cra/)" -r "completed"
            fi
